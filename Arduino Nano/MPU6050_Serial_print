#include <Wire.h>

// MPU6050 I2C address (default when AD0 = GND)
const int MPU_ADDR = 0x68;  

// Variables to store raw values
int16_t AcX, AcY, AcZ, Tmp, GyX, GyY, GyZ;

void setup() {
  Serial.begin(9600);
  Wire.begin();        // Arduino Nano: SDA = A4, SCL = A5
  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x6B);    // PWR_MGMT_1 register
  Wire.write(0);       // Wake up the MPU6050
  Wire.endTransmission(true);

  Serial.println("✅ MPU6050 Initialized");
  delay(500);
}

void loop() {
  // Start communication with MPU6050
  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x3B);   // Starting register for accelerometer data
  Wire.endTransmission(false);
  Wire.requestFrom(MPU_ADDR, 14, true);  // Read 14 registers total

  // Read accelerometer data
  AcX = Wire.read() << 8 | Wire.read();  // X-axis accel
  AcY = Wire.read() << 8 | Wire.read();  // Y-axis accel
  AcZ = Wire.read() << 8 | Wire.read();  // Z-axis accel

  // Read temperature data (optional)
  Tmp = Wire.read() << 8 | Wire.read();  

  // Read gyroscope data
  GyX = Wire.read() << 8 | Wire.read();  // X-axis gyro
  GyY = Wire.read() << 8 | Wire.read();  // Y-axis gyro
  GyZ = Wire.read() << 8 | Wire.read();  // Z-axis gyro

  // Print sensor values
  Serial.print("Accel (X,Y,Z): ");
  Serial.print(AcX); Serial.print(", ");
  Serial.print(AcY); Serial.print(", ");
  Serial.println(AcZ);

  Serial.print("Gyro (X,Y,Z): ");
  Serial.print(GyX); Serial.print(", ");
  Serial.print(GyY); Serial.print(", ");
  Serial.println(GyZ);

  Serial.print("Temp (°C): ");
  Serial.println(Tmp / 340.00 + 36.53);  // Convert raw to Celsius

  Serial.println("-----------------------------");
  delay(500);
}
